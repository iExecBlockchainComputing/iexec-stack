buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

ext {
    web3jVersion = '3.2.0'
    web3jSpringBootVersion = '1.5.0'
    logbackVersion = '1.2.3'
    junitVersion = '4.12'
    springBootVersion = '1.5.9.RELEASE'
}

dependencies {
    // web3j dependencies
    compile "org.web3j:core:$web3jVersion"

    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.2.3"

    compile 'org.apache.commons:commons-lang3:3.4'

    compile files('../iexec-common/build/libs/iexec-common-0.1.0-SNAPSHOT.jar')

    testCompile "junit:junit:$junitVersion"

    deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:0.0.6"
}

shadowJar {
    baseName='iexec-scheduler'
    classifier=null
    version=version
}

build.dependsOn(shadowJar)

def gitBranch = 'git name-rev --name-only HEAD'.execute().text.trim()
def isMasterBranch = gitBranch == "remotes/origin/master"
def canUploadArchives = isMasterBranch

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "packagecloud+https://packagecloud.io/iexec/scheduler") {
            authentication(password: mavenPassword)
        }
    }
}
uploadArchives.enabled = canUploadArchives
