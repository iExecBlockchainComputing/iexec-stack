buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'

jar {
    baseName = 'iexec-scheduler-library'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    web3jVersion = '3.3.1'
    web3jSpringBootVersion = '1.5.0'
    logbackVersion = '1.2.3'
    junitVersion = '4.12'
    springBootVersion = '1.5.9.RELEASE'
}

dependencies {
    // web3j dependencies
    compile "org.web3j:core:$web3jVersion"
    compile "org.web3j:web3j-spring-boot-starter:$web3jSpringBootVersion"

    // spring boot dependencies
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"

    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0"
    compile "com.fasterxml.jackson.core:jackson-databind:2.2.3"

    compile 'org.apache.commons:commons-lang3:3.4'


    testCompile "junit:junit:$junitVersion"
}

task copyContracts(type: Copy) {
    into "./src/main/resources/solidity/poco"

    into(".") {
        from "./PoCo/contracts"
    }

    eachFile { copyDetails ->
        if (copyDetails.path == './IexecHub.sol') {
            filter { line ->
                line.replace("import \"rlc-token/contracts/RLC.sol\";", "import \"./rlc-token/contracts/RLC.sol\";")
            }
        }
    }

    into("./rlc-token") {
        from "./rlc-token"
    }
}

task buildContracts(type: Exec) {
    dependsOn copyContracts

    commandLine("sh", "-c", "cd ./scripts && ./buildContracts.sh")
}
buildContracts.enabled = !project.hasProperty("skipContracts")

// Force the rebuild of contracts before java build
compileJava.dependsOn buildContracts


