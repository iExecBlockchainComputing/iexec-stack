<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Copyrights     : CNRS
 * Author         : Oleg Lodygensky
 * Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
 * Web            : http://www.xtremweb-hep.org
 * 
 *      This file is part of XtremWeb-HEP.
 *
 *    XtremWeb-HEP is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    XtremWeb-HEP is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with XtremWeb-HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
-->

<!-- <!DOCTYPE project SYSTEM "ant.dtd" > -->
<!--    build.xml - Ant build file for the XWHEP sources
        created Mon Mar 25 2002 by Samuel Heriard
 -->
<project 
	basedir="." 
	default="all"
	name="xtremweb" >

  <property name="src.c.dir" value="${basedir}/src/main/natif/xtremweb/archdep" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="src.dir" value="${basedir}/src" />
  <property name="src.test.dir" value="${src.dir}/test/" />
  <property name="lib.dir" value="${basedir}/libXtremWeb" />
  <property name="build.classes" value="${basedir}/build/classes/java/main/" />
  <property name="misc.dir" value="${basedir}/src/main/resources/misc" />
	
  <target name="getversion" >
	<property file="${basedir}/gradle.properties" />    
	<property name="xwversion" value="${version}" />
  </target>

  <target name="configure" depends="getversion">

    <property environment="localEnv" />
	<property name="target.os" value="${os.name}" />

    <condition property="version.changed">
      <or>
        <not><available file="${build.dir}/.build" /></not>
        <not>
          <uptodate targetfile="${build.dir}/.build">
            <srcfiles dir="${build.dir}" includes="VERSION" />
            <srcfiles dir="${src.java.dir}/common" includes="*" />
            <srcfiles dir="${src.java.test.dir}/" includes="**" />
            <srcfiles dir="${src.java.dir}/communications" includes="*" />
            <srcfiles dir="${src.java.dir}/dispatcher" includes="*" />
            <srcfiles dir="${src.java.dir}/archdep" includes="*" />
		    <srcfiles dir="${src.java.dir}/exec" includes="*" />
            <srcfiles dir="${src.java.dir}/worker" includes="*" />
            <srcfiles dir="${src.java.dir}/services" includes="*" />
            <srcfiles dir="${src.java.dir}/dispatcher" includes="*" />
          </uptodate>
        </not>
      </or>
    </condition>
    
    <!-- else parameter needs ant 1.6.3 minimum -->
    <condition property="compiler" value="classic" else="modern">
      <or>
        <equals arg1="${ant.java.version}" arg2="1.1" />
        <equals arg1="${ant.java.version}" arg2="1.2" />
      </or>
    </condition>
    
    <condition property="xwarch" value="ix86">
      <or>
        <equals arg1="${os.arch}" arg2="i86" />
        <equals arg1="${os.arch}" arg2="x86" />
        <equals arg1="${os.arch}" arg2="ix86" />
        <equals arg1="${os.arch}" arg2="i386" />
        <equals arg1="${os.arch}" arg2="x386" />
        <equals arg1="${os.arch}" arg2="ix386" />
        <equals arg1="${os.arch}" arg2="i486" />
        <equals arg1="${os.arch}" arg2="x486" />
        <equals arg1="${os.arch}" arg2="ix486" />
        <equals arg1="${os.arch}" arg2="i586" />
        <equals arg1="${os.arch}" arg2="x586" />
        <equals arg1="${os.arch}" arg2="ix586" />
        <equals arg1="${os.arch}" arg2="i686" />
        <equals arg1="${os.arch}" arg2="x686" />
        <equals arg1="${os.arch}" arg2="ix686" />
      </or>
    </condition>

    <condition property="xwarch" value="amd64">
      <equals arg1="${os.arch}" arg2="amd64" />
    </condition>

    <condition property="xwarch" value="x86_64">
      <equals arg1="${os.arch}" arg2="x86_64" />
    </condition>

    <condition property="xwsuffix" value="linux-${xwarch}">
      <equals arg1="${target.os}" arg2="Linux" />
    </condition>
    <condition property="xwsuffix" value="solaris-sparc">
      <equals arg1="${target.os}" arg2="SunOS" />
    </condition>
    <condition property="xwsuffix" value="FreeBSD-${xwarch}">
      <equals arg1="${target.os}" arg2="FreeBSD" />
    </condition>
    <condition property="xwsuffix" value="macosx-${xwarch}">
      <equals arg1="${target.os}" arg2="Mac OS X" />
    </condition>
    <condition property="xwsuffix" value="win32-${xwarch}">
      <or>
        <equals arg1="${target.os}" arg2="Windows NT" />
        <equals arg1="${target.os}" arg2="Windows 2000" />
        <equals arg1="${target.os}" arg2="Windows XP" />
      </or>
    </condition>

    <property name="dist.dir" value="${build.dir}/dist/${ant.project.name}-${xwversion}" />
    <property name="dist.bin.dir" value="${dist.dir}/bin" />
    <property name="dist.lib" value="${dist.dir}/lib" />
    <property name="dist.doc" value="${dist.dir}/doc" />
    
    <echo>
		ant version = ${ant.version}
		os         	= ${os.name}
		os.arch    	= ${os.arch}
		target     	= ${target.os}
		xwarch     	= ${xwarch}
		xwsuffix   	= ${xwsuffix}
		debug      	= ${debug}
		debuglevel 	= ${debuglevel}
		cross		= ${cross.prefix}
		target java home = ${cross.java.home}
		target		= ${target.os}
		xwversion	= ${xwversion}
    </echo>

  </target>


  <target name="prepare" depends="configure">
    <!-- MAKE THE DIRECTORIES IF NEEDED -->
    <mkdir dir="${basedir}/build" />
    <mkdir dir="${basedir}/build/dist" />
    <mkdir dir="${basedir}/build/bin" />
    <mkdir dir="${basedir}/build/obj" />
    <mkdir dir="${basedir}/build/obj/${xwsuffix}" />
    <mkdir dir="${basedir}/build/jni" />
    <mkdir dir="${basedir}/build/xwclasses" />

  	<!-- CLASSPATH FOR COMPILATION -->
    <path id="project.classpath">
        <pathelement path="${src.dir}" />
        <pathelement path="${src.test.dir}" />
      <pathelement path="${build.classes}" />
      <fileset dir="${lib.dir}">
        <include name="*.jar" />
      </fileset>
    </path>
    <property name="classpath" refid="project.classpath" />

    <echo>
      classpath=${classpath}
    </echo>

  </target> 

  <!-- It should probably be removed -->
  <target name="common" depends="prepare">
    <javac compiler="${compiler}"
 		classpath="${classpath}" 
	   	debug="${debug}"
		debuglevel="${debuglevel}"
    	includeAntRuntime="false"
	   	destdir="${build.classes}"
	   	srcdir="${src.java.dir}"
	   	source="1.8"
	   	deprecation="on">
      <patternset>
        <include name="**/*.java" />
        <exclude name="chkpt/*.java" />
        <exclude name="mpi/*.java" />
        <exclude name="rpcv/*.java" />
        <exclude name="wctrl/*.java" />
      </patternset>
    </javac>
  </target>

  <target name="archdep" depends="configure">
    <javac compiler="${compiler}"  
	   classpath="${classpath}" 
	   debug="${debug}" 
		debuglevel="${debuglevel}"
    	includeAntRuntime="false"
	   destdir="${build.classes}" 
	   srcdir="src/main/java/xtremweb"
	   source="1.8"
	   deprecation="on">
      <patternset><include name="archdep/**" /></patternset> 
    </javac>
  </target>
  
  <!-- generate jni headers -->
  <target  name="jni" depends="prepare">

	<!--
		use exec task, because javah task does not with openjdk...
	-->
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/PortMapper.h xtremweb.archdep.PortMapper" />
		</exec>
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/XWUtilImpl.h xtremweb.archdep.XWUtilImpl" />
		</exec>
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/XWTracerImpl.h xtremweb.archdep.XWTracerImpl" />
		</exec>
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/XWInterruptsImpl.h xtremweb.archdep.XWInterruptsWin32" />
		</exec>
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/WinSaver.h xtremweb.archdep.WinSaver" />
		</exec>
    <exec dir="${src.c.dir}" executable="javah" failonerror="true">
      <arg line="-classpath ${classpath} -o ${src.c.dir}/MacSaver.h xtremweb.archdep.MacSaver" />
		</exec>

    <copy todir="${src.c.dir}"
          filtering="no" overwrite="yes">
      <fileset dir="${misc.dir}">
        <include name="**/*.ico" />
      </fileset>
    </copy>

    <!-- make install must copy the files (jni shared libraries) in ${dist.lib} -->
    <exec dir="${src.c.dir}" executable="make" failonerror="true">
      <arg line="-f &apos;${basedir}/src/main/resources/natif.mk&apos; install" />
      <env key="XWSUFFIX" value="${xwsuffix}" />
      <env key="XWARCH"   value="${xwarch}" />
      <env key="TARGET"   value="${target.os}" />
      <env key="CROSS"    value="${cross.prefix}" />
      <env key="TARGET_JAVA_HOME" value="${cross.java.home}" />
      <env key="XWVERSION" value="${xwversion}" />
    </exec>
  </target>

</project>
