<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Copyrights     : CNRS
 * Author         : Oleg Lodygensky
 * Acknowledgment : XtremWeb-HEP is based on XtremWeb 1.8.0 by inria : http://www.xtremweb.net/
 * Web            : http://www.xtremweb-hep.org
 * 
 *      This file is part of XtremWeb-HEP.
 *
 *    XtremWeb-HEP is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    XtremWeb-HEP is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with XtremWeb-HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
-->


<!-- <!DOCTYPE project SYSTEM "ant.dtd" > -->
<!--    install.xml - Ant build file for the XWHEP sources
        created Fri Aug  9 10:49:46  2002 by Oleg Lodygensky
 -->
<project basedir="." default="install" name="xwhep">

  <!-- NAMES -->
  <property name="target.os" value="${os.name}"/>
  <property name="project" value="xwhep" />
  
   <!-- DIRECTORIES -->
  <property name="res.dir" value="${basedir}/src/main/resources" />
  <property name="misc.dir" value="${res.dir}/misc" />
  <property name="benchmark.dir" value="${res.dir}/benchmark" />
  <property name="src.dir" value="${basedir}/src" />
  <property name="src.java.dir" value="${src.dir}/main/java/xtremweb" />
  <property name="resources.dir" value="${src.dir}/main/resources" />
  <property name="src.c.dir" value="${src.dir}/main/natif/xtremweb/archdep" />
  <property name="src.scripts.dir" value="${res.dir}/scripts" />
  <property name="lib.dir" value="${basedir}/libXtremWeb" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="wrapper.dir" value="${res.dir}/wrapper" />
  <property name="build.classes" value="${build.dir}/classes" />
  <property name="installers.dir" value="${res.dir}/installers" />
  <property name="innosetup.dir" value="${installers.dir}/win32/innoSetup" />
  <property name="msi.dir" value="${installers.dir}/win32/msi" />
  <property name="macosxpkg.dir" value="${installers.dir}/macosx" />
  <property name="macosxpkg.server" value="${macosxpkg.dir}/xwhep.server" />
  <property name="macosxpkg.worker" value="${macosxpkg.dir}/xwhep.worker" />
  <property name="macosxpkg.client" value="${macosxpkg.dir}/xwhep.client" />
  <property name="doc.dir" value="${res.dir}/doc"/>
  <property name="docker.dir" value="${res.dir}/docker"/>

  <taskdef name="jarbundler"
           classname="net.sourceforge.jarbundler.JarBundler">
    <classpath>
      <pathelement location="${lib.dir}/jarbundler-1.8.1.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="uuid"
           classname="org.apache.commons.id.uuid.task.UUIDTask">
    <classpath>
      <pathelement location="${lib.dir}/commons-id-0.1-SNAPSHOT.jar"/>
    </classpath>
  </taskdef>

  <target name="getversion" >
    <property file="${basedir}/gradle.properties" />
    <property name="xw.version" value="${version}" />
  </target>



  <target name="prepare" depends="getversion">
    <property file="${build.dir}/build.conf"/>

    <property name="install.dir" value="/opt" />
    <property name="installDir" value="${install.dir}/${ant.project.name}-${xw.version}" />

    <property name="dist.dir" value="${build.dir}/dist/${ant.project.name}-${xw.version}" />
    <property name="dist.lib" value="${dist.dir}/lib" />
    <property name="dist.doc" value="${dist.dir}/doc" />
    <property name="dist.resources" value="${dist.dir}/resources" />

    <property name="dist.dir.bin" value="${dist.dir}/bin" />
    <property name="dist.dir.keystore" value="${dist.dir}/keystore" />
    <property name="dist.dir.lib" value="${dist.dir}/lib" />
    <property name="dist.dir.installers" value="${dist.dir}/installers" />
    <property name="dist.dir.win32" value="${dist.dir.installers}/win32" />
    <property name="dist.dir.win32.client" value="${dist.dir.win32}/xwhep.client/" />
    <property name="dist.dir.client.innosetup" value="${dist.dir.win32.client}/innoSetup" />
    <property name="dist.dir.win32.worker" value="${dist.dir.win32}/xwhep.worker/" />
    <property name="dist.dir.win32.vworker" value="${dist.dir.win32}/xwhep.vworker/" />
    <property name="dist.dir.worker.innosetup" value="${dist.dir.win32.worker}/innoSetup" />
    <property name="dist.dir.vworker.innosetup" value="${dist.dir.win32.vworker}/innoSetup" />
    <property name="dist.dir.macosx" value="${dist.dir.installers}/macosx" />
    <property name="dist.dir.macosx.server" value="${dist.dir.macosx}/xwhep.server" />
    <property name="dist.dir.macosx.worker" value="${dist.dir.macosx}/xwhep.worker" />
    <property name="dist.dir.macosx.vworker" value="${dist.dir.macosx}/xwhep.vworker" />
    <property name="dist.dir.macosx.client" value="${dist.dir.macosx}/xwhep.client" />
    <property name="dist.dir.client" value="${dist.dir.installers}/xwhep.client/" />

  </target>

  
  <target name="configure" depends="prepare">
    <property file="${build.dir}/build.conf"/>

    <property environment="localEnv"/>
 
    <condition property="launcher.url" value="http://nohost/">
      <not>
        <isset property="${launcher.url}"/>
      </not>
    </condition>

    <condition property="system.user" value="xwhep">
      <not>
        <isset property="system.user" />
      </not>
    </condition>

    <condition property="dbUserPassword" value="${db.user.password}">
      <isset property="db.user.password"/>
    </condition>

    <condition property="dbUserPassword" value="${xtremweb.admin.password}">
      <not>
        <isset property="db.user.password"/>
      </not>
    </condition>

    <condition property="dbUserLogin" value="${db.user.login}">
      <isset property="db.user.login"/>
    </condition>

    <condition property="dbUserLogin" value="${xtremweb.admin.login}">
      <not>
        <isset property="db.user.login"/>
      </not>
    </condition>


<!-- ****************************************************** -->
<!-- ****************************************************** -->
<!-- We use upper case to conform to :                      -->
<!--           src/common/XWCPUs.java                       -->
<!--           src/common/XWOSes.java                       -->
<!-- ****************************************************** -->
<!-- ****************************************************** -->


    <condition property="xwarch" value="IX86">
      <or>
        <equals trim="true" arg1="${os.arch}" arg2="i86" />
        <equals trim="true" arg1="${os.arch}" arg2="x86" />
        <equals trim="true" arg1="${os.arch}" arg2="ix86" />
        <equals trim="true" arg1="${os.arch}" arg2="i386" />
        <equals trim="true" arg1="${os.arch}" arg2="x386" />
        <equals trim="true" arg1="${os.arch}" arg2="ix386" />
        <equals trim="true" arg1="${os.arch}" arg2="i486" />
        <equals trim="true" arg1="${os.arch}" arg2="x486" />
        <equals trim="true" arg1="${os.arch}" arg2="ix486" />
        <equals trim="true" arg1="${os.arch}" arg2="i586" />
        <equals trim="true" arg1="${os.arch}" arg2="x586" />
        <equals trim="true" arg1="${os.arch}" arg2="ix586" />
        <equals trim="true" arg1="${os.arch}" arg2="i686" />
        <equals trim="true" arg1="${os.arch}" arg2="x686" />
        <equals trim="true" arg1="${os.arch}" arg2="ix686" />
      </or>
    </condition>

    <condition property="xwarch" value="AMD64">
      <equals trim="true" arg1="${os.arch}" arg2="amd64" />
    </condition>

    <condition property="xwarch" value="x86_64">
      <equals trim="true" arg1="${os.arch}" arg2="x86_64" />
    </condition>

    <condition property="xwarch" value="PPC">
      <equals trim="true" arg1="${os.arch}" arg2="ppc" />
    </condition>

    <condition property="xwsuffix" value="LINUX-${xwarch}">
      <equals trim="true" arg1="${os.name}" arg2="Linux" />
    </condition>
    <condition property="xwsuffix" value="SOLARIS-SPARC">
      <equals trim="true" arg1="${os.name}" arg2="SunOS" />
    </condition>
    <condition property="xwsuffix" value="MACOSX-${xwarch}">
      <equals trim="true" arg1="${target.os}" arg2="Mac OS X" />
    </condition>
    <condition property="xwsuffix" value="WIN32-${xwarch}">
      <or>
	<equals trim="true" arg1="${os.name}" arg2="Windows NT" />
	<equals trim="true" arg1="${os.name}" arg2="Windows 2000" />
	<equals trim="true" arg1="${os.name}" arg2="Windows XP" />
      </or>
    </condition>

    <condition property="dbEngine" value="ENGINE = ${db.engine}">
      <isset property="db.engine"/>
    </condition>
    <condition property="dbEngine" value="">
      <not>
        <isset property="db.engine"/>
      </not>
    </condition>

   <condition property="dbSuPassword" value="${db.su.password}">
      <isset property="db.su.password"/>
    </condition>

    <condition property="dbSuPassword" value="">
      <not>
        <isset property="db.su.password"/>
      </not>
    </condition>

    <condition property="dbSuName" value="${db.su.login}">
      <isset property="db.su.login"/>
    </condition>

    <condition property="dbSuName" value="">
      <not>
        <isset property="db.su.login"/>
      </not>
    </condition>

    <echo>
    user  login : ${dbUserLogin} ${dbUserPassword}
    admin login : ${xtremweb.admin.login} ${xtremweb.admin.password}
    DB su login : ${dbSuName} ${dbSuPassword}
    ENGINE : &quot;${dbEngine}&quot;
    launcher.url = ${launcher.url}
    system.user  = ${system.user}
    xwsuffix=${xwsuffix}
    xwarch=${xwarch}
    target.os=${target.os}
    cross.prefix=${cross.prefix}
    cross.java.home=${cross.java.home}
    version=${version}
    </echo>

  </target>


  <!-- ************************ INSTALL ************************** -->

  <target name="installFiles" depends="configure">



    <!-- ********************************************** -->
    <!-- **** Note that every following copies uses *** -->
    <!-- ****  filtering (i.e. uses defined tokens) *** -->
    <!-- ****                                       *** -->
    <!-- **** Important :                           *** -->
    <!-- ****    - the dispatcher stores the user   *** -->
    <!-- ****      password uncoded to connect to   *** -->
    <!-- ****      MySQL server                     *** -->
    <!-- ****    - the other parts (worker, client) *** -->
    <!-- ****      store the user password uncoded  *** -->
    <!-- ****      to connect to Xwhep server    *** -->
    <!-- ****      since communications are now     *** -->
    <!-- ****      encrypted                        *** -->
    <!-- ****                                       *** -->
    <!-- ********************************************** -->

    <!-- MacosX install-->

    <copy todir="${dist.dir.macosx.server}/installer/PckRoot/private/etc/xwhep.server/lib"
          filtering="no" overwrite="yes">
      <fileset dir="${lib.dir}">
	      <patternset refid="XW-LIBS" />
      </fileset>
    </copy>
    
    <condition property="installedDBUser" value="true">
      <equals trim="true" arg1="${insertDBUser}" arg2="true">
      </equals>
    </condition>


    <!-- **** Create java-config script file **** -->
    <filter token="INSTALLDIR" value="${installDir}"/>
    <filter token="HOMEDIR" value="/var/xwhep" />
    <filter token="KEYDIR" value="${installDir.keystore}" />
    <filter token="DATASERVERS" value="${data.servers}"/>
    <filter token="XWUSER" value="${xw.user}"/>
    <filter token="XWPASSWORD" value="${xw.password}"/>
    <filter token="LAUNCHERURL" value="${launcher.url}"/>
    <filter token="KEYDIR" value="."/>
    <filter token="DEFAULTUSER" value="" />
    <filter token="DEFAULTPASSWORD" value="" />

    <copy file="${misc.dir}/xtremweb.client.conf.in"
          tofile="${dist.dir.macosx.client}/installer/PckRoot/Applications/xwhep.client/conf/xtremweb.client.conf"
          filtering="yes" overwrite="yes" />

    <filter token="DEFAULTUSER" value="${xtremweb.worker.login}" />
    <filter token="DEFAULTPASSWORD" value="${xtremweb.worker.password}" />

    <mkdir dir="${dist.dir.keystore}" />


    <filter token="KEYDIR" value="/private/etc/xwhep.worker"/>

    <copy file="${misc.dir}/xtremweb.worker.conf.in" 
          tofile="${dist.dir.macosx.worker}/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" />

    <copy file="${misc.dir}/worker-start.html" 
          tofile="${dist.dir.macosx.worker}/installer/PckRoot/Applications/xwhep.worker/index.html"
          filtering="no" overwrite="yes" />


    <copy file="${misc.dir}/xwhep.sb" 
          todir="${dist.dir.macosx.worker}/installer/PckRoot/private/etc/xwhep.worker/conf"
          filtering="no" overwrite="yes" />

    <filter token="DEFAULTUSER" value="${xtremweb.vworker.login}" />
    <filter token="DEFAULTPASSWORD" value="${xtremweb.vworker.password}" />

    <copy file="${misc.dir}/xtremweb.worker.conf.in" 
          tofile="${dist.dir.macosx.vworker}/installer/PckRoot/private/etc/xwhep.worker/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" />
    <copy file="${misc.dir}/worker-start.html" 
          tofile="${dist.dir.macosx.vworker}/installer/PckRoot/Applications/xwhep.worker/index.html"
          filtering="no" overwrite="yes" />
    <copy file="${misc.dir}/xwhep.sb" 
          todir="${dist.dir.macosx.vworker}/installer/PckRoot/private/etc/xwhep.worker/conf"
          filtering="no" overwrite="yes" />




	<filter token="KEYDIR" value="/private/etc/xwhep.server"/>

    <copy file="${misc.dir}/xtremweb.server.conf.in" 
          tofile="${dist.dir.macosx.server}/installer/PckRoot/private/etc/xwhep.server/conf/xtremweb.server.conf"
          filtering="yes" overwrite="yes" />
    <mkdir dir="${dist.dir.macosx.server}/installer/PckRoot/Applications/xwhep.server/doc" />
    <copy todir="${dist.dir.macosx.server}/installer/PckRoot/Applications/xwhep.server/doc"
          filtering="no" overwrite="yes">
      <fileset dir="${doc.dir}">
	    <patternset refid="XW-DOC" />
      </fileset>
    </copy>

    <filter token="KEYDIR" value="../keystore"/>

    <!-- Install Win32 Client -->

    <filter token="DEFAULTUSER" value="" />
    <filter token="DEFAULTPASSWORD" value="" />

    <!--   copy file="${misc.dir}/xtremweb.client.conf.in"
          tofile="${dist.dir.win32.client}/conf/xtremweb.client.conf"
          filtering="yes" overwrite="yes" /-->
    <mkdir dir="${dist.dir.client.innosetup}/client/bin" />
    <mkdir dir="${dist.dir.client.innosetup}/client/conf" />
    <mkdir dir="${dist.dir.client.innosetup}/client/doc" />
    <mkdir dir="${dist.dir.client.innosetup}/client/keystore" />
    <mkdir dir="${dist.dir.client.innosetup}/client/lib" />

    <!--copy file="${misc.dir}/xtremweb.client.conf.in"
          tofile="${dist.dir.client.innosetup}/client/conf/xtremweb.client.conf"
          filtering="yes" overwrite="yes" /-->


    <!-- Install Win32 Worker -->

    <filter token="DEFAULTUSER" value="${xtremweb.worker.login}" />
    <filter token="DEFAULTPASSWORD" value="${xtremweb.worker.password}" />

    <!--copy file="${misc.dir}/xtremweb.worker.conf.in"
          tofile="${dist.dir.win32.worker}/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" /-->
    <mkdir dir="${dist.dir.worker.innosetup}/worker/bin" />
    <mkdir dir="${dist.dir.worker.innosetup}/worker/conf" />
    <mkdir dir="${dist.dir.worker.innosetup}/worker/doc" />
    <mkdir dir="${dist.dir.worker.innosetup}/worker/keystore" />
    <mkdir dir="${dist.dir.worker.innosetup}/worker/lib" />
    <mkdir dir="${dist.dir.worker.innosetup}/worker/misc" />


    <!--copy file="${misc.dir}/xtremweb.worker.conf.in"
          tofile="${dist.dir.worker.innosetup}/worker/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" /-->

    <!--copy file="${res.dir}/wrapper/conf/wrapper-worker.conf"
          tofile="${dist.dir.win32.worker}/conf/wrapper-worker.conf"
          filtering="no" overwrite="yes" /-->

    <!--copy file="${res.dir}/wrapper/conf/wrapper-worker.conf"
          tofile="${dist.dir.worker.innosetup}/worker/conf/wrapper-worker.conf"
          filtering="no" overwrite="yes" /-->

    <!--copy todir="${dist.dir.win32.worker}/lib/"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/lib">
	      <include name="*" />
      </fileset>
    </copy-->

    <!--copy todir="${dist.dir.worker.innosetup}/worker/lib/"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/lib">
	      <include name="*" />
      </fileset>
    </copy-->


    <!--copy todir="${dist.dir.worker.innosetup}/worker/lib/"
          filtering="no" overwrite="yes"
	  file="${installers.dir}/win32/cygwin1.dll" /-->
    <!--copy todir="${dist.dir.worker.innosetup}/worker/misc/"
          filtering="no" overwrite="yes"
	  file="${src.c.dir}/xwwrk.ico" /-->
    <!--copy todir="${dist.dir.worker.innosetup}/worker/doc"
          filtering="no" overwrite="yes"
	  file="${misc.dir}/worker-start.html" /-->
    <!--copy todir="${dist.dir.win32.worker}/bin"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/bin">
	      <include name="*" />
      </fileset>
    </copy-->
    <!--copy todir="${dist.dir.worker.innosetup}/worker/bin"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/bin">
	      <include name="InstallXWWorker-NT.bat" />
	      <include name="StartXWWorker-NT.bat" />
	      <include name="UninstallXWWorker-NT.bat" />
	      <include name="Wrapper.exe" />
	      <include name="xtremweb.worker.bat" />
      </fileset>
    </copy-->

    <!--copy todir="${dist.dir.win32.worker}/doc"
          filtering="no" overwrite="yes"
	  file="${misc.dir}/worker-start.html" /-->

  	
    <!-- Install Win32 VWorker -->

    <filter token="DEFAULTUSER" value="${xtremweb.vworker.login}" />
    <filter token="DEFAULTPASSWORD" value="${xtremweb.vworker.password}" />

    <!--copy file="${misc.dir}/xtremweb.worker.conf.in"
          tofile="${dist.dir.win32.vworker}/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" /-->

    <mkdir dir="${dist.dir.vworker.innosetup}/worker/bin" />
    <mkdir dir="${dist.dir.vworker.innosetup}/worker/conf" />
    <mkdir dir="${dist.dir.vworker.innosetup}/worker/doc" />
    <mkdir dir="${dist.dir.vworker.innosetup}/worker/keystore" />
    <mkdir dir="${dist.dir.vworker.innosetup}/worker/lib" />
    <mkdir dir="${dist.dir.vworker.innosetup}/worker/misc" />

    <!--copy file="${misc.dir}/xtremweb.worker.conf.in"
          tofile="${dist.dir.vworker.innosetup}/worker/conf/xtremweb.worker.conf"
          filtering="yes" overwrite="yes" /-->

    <!--copy file="${res.dir}/wrapper/conf/wrapper-worker.conf"
          tofile="${dist.dir.win32.vworker}/conf/wrapper-worker.conf"
          filtering="no" overwrite="yes" /-->

    <!--copy file="${res.dir}/wrapper/conf/wrapper-worker.conf"
          tofile="${dist.dir.vworker.innosetup}/worker/conf/wrapper-worker.conf"
          filtering="no" overwrite="yes" /-->
    <!--copy todir="${dist.dir.win32.vworker}/lib/"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/lib">
	      <include name="*" />
      </fileset>
    </copy-->

    <!--copy todir="${dist.dir.vworker.innosetup}/worker/lib/"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/lib">
	      <include name="*" />
      </fileset>
    </copy-->

    <!--copy todir="${dist.dir.vworker.innosetup}/worker/lib/"
          filtering="no" overwrite="yes"
	  file="${installers.dir}/win32/cygwin1.dll" /-->
    <!--copy todir="${dist.dir.vworker.innosetup}/worker/misc/"
          filtering="no" overwrite="yes"
	  file="${src.c.dir}/xwwrk.ico" /-->
    <!--copy todir="${dist.dir.vworker.innosetup}/worker/doc"
          filtering="no" overwrite="yes"
	  file="${misc.dir}/worker-start.html" /-->
    <!--copy todir="${dist.dir.win32.vworker}/bin"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/bin">
	      <include name="*" />
      </fileset>
    </copy-->
    <!--copy todir="${dist.dir.vworker.innosetup}/worker/bin"
          filtering="no" overwrite="yes">
      <fileset dir="${res.dir}/wrapper/bin">
	      <include name="InstallXWWorker-NT.bat" />
	      <include name="StartXWWorker-NT.bat" />
	      <include name="UninstallXWWorker-NT.bat" />
	      <include name="Wrapper.exe" />
	      <include name="xtremweb.worker.bat" />
      </fileset>
    </copy-->

    <!--copy todir="${dist.dir.win32.vworker}/doc"
          filtering="no" overwrite="yes"
	  file="${misc.dir}/worker-start.html" /-->


  </target>


  <target name="ganglia" if="ganglia.www.dir" depends="configure">
    <echo>
      Installing ganglia ${ant.project.name} template
    </echo>
    <copy overwrite="yes" todir="${ganglia.www.dir}/templates">
      <fileset dir="${basedir}/php/ganglia/templates/"/>
    </copy>
  </target>



  <target name="createDownload" depends="setupScripts">

    <filter token="XWVERSION" value="${xw.version}"/>
    <filter token="SYSTEMUSER" value="${system.user}"/>

    <!-- Create the stand alone JAR file for the worker -->

      <!-- Install Mac OS X  -->

    <copy file="${lib.dir}/bcprov-jdk15on-151.jar"
          todir="${dist.dir.macosx.client}/installer/PckRoot/Applications/xwhep.client/lib"
          overwrite="yes" />
    <copy file="${lib.dir}/bcpkix-jdk15on-151.jar"
          todir="${dist.dir.macosx.client}/installer/PckRoot/Applications/xwhep.client/lib"
          overwrite="yes" />
    <copy file="${dist.dir.keystore}/xwhepclient.keys" 
          todir="${dist.dir.macosx.client}/installer/PckRoot/Applications/xwhep.client/keystore"
          failonerror="no" filtering="no" overwrite="yes" />

    <copy file="${dist.dir.keystore}/xwhepserver.keys" 
          todir="${dist.dir.macosx.server}/installer/PckRoot/private/etc/xwhep.server/keystore"
          failonerror="no" filtering="no" overwrite="yes" />

    <copy file="${dist.dir.keystore}/xwhepworker.keys"
          todir="${dist.dir.macosx.worker}/installer/PckRoot/private/etc/xwhep.worker/keystore"
          failonerror="no" filtering="no" overwrite="yes" />
    <copy file="${dist.dir.keystore}/xwhepworker.keys"
          todir="${dist.dir.macosx.vworker}/installer/PckRoot/private/etc/xwhep.worker/keystore"
          failonerror="no" filtering="no" overwrite="yes" />

    <copy todir="${dist.doc}/xwhep.client/doc"
          filtering="no" overwrite="yes">
      <fileset dir="${doc.dir}">
	      <patternset refid="XW-DOC" />
      </fileset>
    </copy>



    <jarbundler dir="${dist.dir.bin}"
		name="xwhep.client"
		bundleid="xwhep.client.Client" 
		build="${xw.version}"
		version="${xw.version}"
		developmentregion="French"
		jvmversion="1.5+"
		icon="${misc.dir}/xwicons4.icns"
		vmoptions="-Djavax.net.ssl.trustStore=../keystore/xwhepclient.keys"
		stubfile="${macosxpkg.dir}/JavaApplicationStub"
		mainclass="xtremweb.client.Client" 
		arguments="--xwgui --xwconfig ../conf/xtremweb.client.conf" 
		jar="${build.dir}/libs/xtremweb-${xw.version}.jar"
		/>

    <mkdir  dir="${dist.dir.bin}/xwhep.client.app" />
    <copy todir="${dist.dir.bin}/xwhep.client.app"
          filtering="yes" overwrite="yes">
      <fileset dir="${dist.dir.bin}/xwhep.client.app" />
    </copy>

  	<mkdir  dir="${dist.dir.macosx.client}" />
    <mkdir  dir="${dist.dir.macosx.worker}" />
    <mkdir  dir="${dist.dir.macosx.vworker}" />
    <mkdir  dir="${dist.dir.macosx.server}" />
    <mkdir  dir="${dist.dir.worker.innosetup}" />
    <mkdir  dir="${dist.dir.vworker.innosetup}" />
    <mkdir  dir="${dist.dir.server.innosetup}" />

    <filter token="XWVERSION" value="${xw.version}"/>
    <filter token="SYSTEMUSER" value="${system.user}"/>

    <copy todir="${dist.dir.macosx.worker}"
          filtering="yes" overwrite="yes">
      <fileset dir="${macosxpkg.worker}" />
    </copy>
    <copy todir="${dist.dir.macosx.vworker}"
          filtering="yes" overwrite="yes">
      <fileset dir="${macosxpkg.worker}" />
    </copy>
    <copy todir="${dist.dir.macosx.client}"
          filtering="yes" overwrite="yes">
      <fileset dir="${macosxpkg.client}" />
    </copy>
    <copy todir="${dist.dir.macosx.server}"
          filtering="yes" overwrite="yes">
      <fileset dir="${macosxpkg.server}" />
    </copy>


    <!--copy todir="${dist.dir.worker.innosetup}"
          filtering="yes" overwrite="yes">
      <fileset dir="${innosetup.dir}" />
    </copy-->
    <!--copy todir="${dist.dir.win32.worker}"
          filtering="yes" overwrite="yes">
      <fileset file="${installers.dir}/win32/cygwin1.dll" />
    </copy>
    <copy todir="${dist.dir.vworker.innosetup}"
          filtering="yes" overwrite="yes">
      <fileset dir="${innosetup.dir}" />
    </copy>
    <copy todir="${dist.dir.win32.vworker}"
          filtering="yes" overwrite="yes">
      <fileset file="${installers.dir}/win32/cygwin1.dll" />
    </copy-->


    <filter token="DEFAULTUSER" value="${xtremweb.worker.login}" />
    <filter token="DEFAULTPASSWORD" value="${xtremweb.worker.password}" />


  	<!--copy file="${lib.dir}/bcprov-jdk15on-151.jar"
	        todir="${dist.dir.client.innosetup}/client/lib/"
          overwrite="yes" />
    <copy file="${lib.dir}/bcpkix-jdk15on-151.jar"
	        todir="${dist.dir.client.innosetup}/client/lib/"
          overwrite="yes" /-->


    <!-- classpath for execution -->
    <path id="project.classpath" >
      <fileset dir="${dist.dir.lib}">
        <include name="*" />
      </fileset>
    </path>
    <property name="classpath" refid="project.classpath"/>

  </target>


  <target name="setupScripts" depends="installFiles" >

    <delete includeEmptyDirs="true" >
      <fileset dir="${dist.dir.bin}" >
        <include name="one_**" />
        <include name="stratuslab_**" />
      </fileset>
    </delete>

  </target>

  <!-- *************************** END OF INSTALL ************************** -->

</project>
