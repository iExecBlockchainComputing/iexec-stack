ScheduleProvider@startuml


:iExecCloudUser:
:DappUser:
:AppProvider:
:ScheduleProvider:
:DatasetProvider:
:ResourceProvider:


cloud {
  [IexecAPI]
}
component [IexecAPI]



DappUser -down-> [IexecAPI]: use


cloud {
  [WorkOrder]
}

component [WorkOrder]




cloud {
  [App]
}
component [App]
component [AppRepository]


cloud {
  [Dataset]
}
component [Dataset]
component [DatasetRepository]


cloud {
  [WorkerPool]
}

component [WorkerPool]
component [iexec-scheduler]
component [ResultRepository]

component [iexec-worker]

cloud {
  [iExecHub]
  [Marketplace]
}

cloud {
  [RLC Token]
}


component [Marketplace]
component [iExecHub]
component [RLC Token]

IexecAPI <-down-> [iExecHub]

iExecCloudUser -down-> [iExecHub]


[Marketplace] <-right-> [iExecHub]

[iExecHub] <-right-> [RLC Token]




AppProvider -up-> [App]: owner
AppProvider -down-> AppRepository: expose

DatasetProvider -up-> [Dataset]: owner
DatasetProvider -down-> DatasetRepository: expose

ScheduleProvider -up-> [WorkerPool]: owner


ScheduleProvider -down-> [iexec-scheduler]: control
ScheduleProvider -down-> [ResultRepository]: control and expose
ResultRepository <-left-> [iexec-scheduler]


[Dataset] <-up- [WorkOrder]
[App] <-up- [WorkOrder]
[WorkOrder] -down-> [WorkerPool]


[iExecHub] -down-> [WorkOrder]

[iexec-scheduler] <-up-> [WorkerPool]
[iexec-worker] <-up-> [WorkerPool]

[ResourceProvider] -right-> [iexec-worker]: control

[iexec-worker] <-right-> [iexec-scheduler]


[iexec-worker] <-up-> [AppRepository]

[iexec-worker] <-up-> [DatasetRepository]


@enduml
